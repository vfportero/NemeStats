# Notes:
#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.
 
#---------------------------------#
#      general configuration      #
#---------------------------------#
 
# version format
version: 1.0.{build}
 
# you can use {branch} name in version format too
# version: 1.0.{build}-{branch}
 
# branches to build
branches:
  # whitelist
  only:
    - master
 
  # blacklist
#  except:
#    - gh-pages
 
# Do not build on tags (GitHub only)
skip_tags: true
 
# Skipping commits with particular message or from user
#skip_commits:
#  message: /Created.*\.(png|jpg|jpeg|bmp|gif)/       # Regex for matching commit message
#  author: John        # Commit author's username, name, email or regexp maching one of these.
 
#---------------------------------#
#    environment configuration    #
#---------------------------------#
 
# Operating system (build VM template)
os: Windows Server 2012
 
# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input
 
# clone directory
clone_folder: c:\projects\nemestats
 
# fetch repository as zip archive
shallow_clone: false                 # default is "false"
 
# set clone depth
clone_depth: 5                      # clone entire repository history if not defined
 
# setting up etc\hosts file
hosts:
  queue-server: 127.0.0.1
  db.server.com: 127.0.0.2
 
# environment variables
#environment:
  #my_var1: value1
  #my_var2: value2
  # this is how to set encrypted variable. Go to "Encrypt data" page in account menu to encrypt data.
  #my_secure_var1:
  #  secure: FW3tJ3fMncxvs58/ifSP7w==
 
# environment:
#  global:
#    connection_string: server=12;password=13;
#    service_url: https://127.0.0.1:8090
#
#  matrix:
#  - db: mysql
#    provider: mysql
#
#  - db: mssql
#    provider: mssql
#    password:
#      secure: $#(JFDA)jQ@#$
 
# this is how to allow failing jobs in the matrix
matrix:
  fast_finish: true     # set this flag to immediately finish build once one of the jobs fails.
  #allow_failures:
  #  - platform: x86
  #    configuration: Debug
  #  - platform: x64
  #    configuration: Release
 
# enable service required for build/tests
services:
#  - mssql2014           # start SQL Server 2014 Express
#  - mssql2014rs         # start SQL Server 2014 Express and Reporting Services
#  - mssql2012sp1        # start SQL Server 2012 SP1 Express
#  - mssql2012sp1rs      # start SQL Server 2012 SP1 Express and Reporting Services
#  - mssql2008r2sp2      # start SQL Server 2008 R2 SP2 Express
#  - mssql2008r2sp2rs    # start SQL Server 2008 R2 SP2 Express and Reporting Services
#  - mysql               # start MySQL 5.6 service
#  - postgresql          # start PostgreSQL 9.3 service
#  - iis                 # start IIS
#  - msmq                # start Queuing services
 
# scripts that run after cloning repository
install:
  # by default, all script lines are interpreted as batch
  #- echo This is batch
  # to run script as a PowerShell command prepend it with ps:
  #- ps: Write-Host 'This is PowerShell'
  # batch commands start from cmd:
  #- cmd: echo This is batch again
  #- cmd: set MY_VAR=12345
 
# enable patching of AssemblyInfo.* files
#assembly_info:
#  patch: true
#  file: AssemblyInfo.*
#  assembly_version: "2.2.{build}"
#  assembly_file_version: "{version}"
#  assembly_informational_version: "{version}"
 
 
# Automatically register private account and/or project AppVeyor NuGet feeds.
#nuget:
#  account_feed: true
#  project_feed: true
#  disable_publish_on_pr: true     # disable publishing of .nupkg artifacts to
                                  # account/project feeds for pull request builds
 
#---------------------------------#
#       build configuration       #
#---------------------------------#
 
# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: Any CPU
 
# to add several platforms to build matrix:
#platform:
#  - x86
#  - Any CPU
 
# build Configuration, i.e. Debug, Release, etc.
configuration: Release
 
# to add several configurations to build matrix:
#configuration:
#  - Debug
#  - Release
 
build:
  parallel: true                  # enable MSBuild parallel builds
  project: NemeStats.sln      # path to Visual Studio solution or project
  publish_wap: false               # package Web Application Projects (WAP) for Web Deploy
  publish_wap_xcopy: false         # package Web Application Projects (WAP) for XCopy deployment
  publish_azure: false             # package Azure Cloud Service projects and push to artifacts
  publish_nuget: false             # package projects with .nuspec files and push to artifacts
  publish_nuget_symbols: false     # generate and publish NuGet symbol packages
  include_nuget_references: false  # add -IncludeReferencedProjects option while packaging NuGet artifacts
 
  # MSBuild verbosity level
  verbosity: normal
 
 
# scripts to run before build
before_build:
 - nuget restore
# scripts to run after build
after_build:
# ./Tests/BusinessLogic.Tests/bin/Release/BusinessLogic.Tests.dll
# - nunit3-console ./Tests/UI.Tests/bin/Release/UI.Tests.dll
# - nunit3-console ./BoardGameGeekApiClient.Tests/bin/Release/BoardGameGeekApiClient.Tests.dll

# to run your custom scripts instead of automatic MSBuild
build_script:
 
# to disable automatic builds
#build: off
 
#---------------------------------#
#       tests configuration       #
#---------------------------------#
 
#test:
#  assemblies:
#    - '..\Tests\**\*.Tests.dll'

# to run tests from different categories as separate jobs in parallel
#test:
#  categories:
#    - A            # A category common for all jobs
#    - [UI]         # 1st job
#    - [DAL, BL]    # 2nd job
 
# scripts to run before tests
#before_test:
 # - echo script1
 # - ps: Write-Host "RUNNING TESTS:"
 
# scripts to run after tests
#after_test:
 
# to run your custom scripts instead of automatic tests
#test_script:
#  - echo TESTING COMPLETE
 
# to disable automatic tests 
#test: off
 
 
#---------------------------------#
#      artifacts configuration    #
#---------------------------------#
 
#artifacts:
 
  # pushing a single file
  #- path: test.zip
 
  # pushing a single file with environment variable in path and "Deployment name" specified
  #- path: MyProject\bin\$(configuration)
  #  name: myapp
 
  # pushing entire folder as a zip archive
  #- path: logs
 
  # pushing all *.nupkg files in directory
  #- path: out\*.nupkg
 
 
  
#---------------------------------#
#         notifications           #
#---------------------------------#
  
#notifications:
 
  # Email
 # - provider: Email
  #  to:
   #   - cracker4o@gmail.com
   # subject: 'Nemestats Build {{status}}'                  # optional
   # message: "{{message}}, {{commitId}}, ..."    # optional
   # on_build_status_changed: true
